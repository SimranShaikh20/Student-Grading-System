@page "/assignment/show"
@using Project.Models
@using Project.Data
@using Microsoft.EntityFrameworkCore
@inject ProjectContext context
@inject IJSRuntime JS

<h3 class="text-white">Assignments</h3>

@if (assignments == null)
{
    <p><em class="text-white">Loading assignments...</em></p>
}
else if (!assignments.Any())
{
    <p class="text-white"><strong>No assignments found.</strong></p>
}
else
{
    <table class="table table-bordered">
        <thead style="background-color: #343a40;">
            <tr>
                <th class="text-white">Title</th>
                <th class="text-white">Description</th>
                <th class="text-white">File Type</th>
                <th class="text-white">Faculty</th>
                <th class="text-white">Deadline</th>
                <th class="text-white">Max Marks</th>
            </tr>
        </thead>
        <tbody style="background-color: #2c2f33;">
            @foreach (var ass in assignments)
            {
                <tr>
                    <td class="text-white">@ass.Title</td>
                    <td class="text-white">@ass.Description</td>
                    <td class="text-white">@ass.FileType</td>
                    <td class="text-white">@ass.Facultyname (@ass.FacultyId)</td>
                    <td class="text-white">@ass.Deadline.ToShortDateString()</td>
                    <td class="text-white">@ass.maxmarks</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<StudentAssShow>? assignments;

    protected override async Task OnInitializedAsync()
    {
        assignments = await context.Assignments
            .Select(a => new StudentAssShow
                {
                    Id = a.Id,
                    Title = a.Title,
                    Description = a.Description,
                    FileType = a.FileType,
                    FacultyId = a.FacultyId,
                    Facultyname = a.Facultyname,
                    Deadline = a.Deadline,
                    maxmarks = a.maxmarks
                }).ToListAsync();
    }
}
