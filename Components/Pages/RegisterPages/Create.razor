@page "/registers/create"
@using Microsoft.EntityFrameworkCore
@using Project.Models
@inject IDbContextFactory<Project.Data.ProjectContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1 class="text-center">Registration</h1>



<div class="d-flex justify-content-center align-items-center" style="min-height: 80vh;">
    <div class="card shadow-lg p-4 border-primary" style="width: 40rem;">
        <div class="card-body">
            <EditForm method="post" Model="Register" OnValidSubmit="AddRegister" FormName="create" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />
                
                <div class="mb-3">
                    <label for="full_name" class="form-label">Full Name:</label>
                    <InputText id="full_name" @bind-Value="Register.full_name" class="form-control" />
                    <ValidationMessage For="() => Register.full_name" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="sem" class="form-label">Semester:</label>
                    <InputNumber id="sem" @bind-Value="Register.sem" class="form-control" />
                    <ValidationMessage For="() => Register.sem" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="year" class="form-label">Year:</label>
                    <InputNumber id="year" @bind-Value="Register.year" class="form-control" />
                    <ValidationMessage For="() => Register.year" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="dep" class="form-label">Department:</label>
                    <InputText id="dep" @bind-Value="Register.dep" class="form-control" />
                    <ValidationMessage For="() => Register.dep" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="contact_no" class="form-label">Contact No:</label>
                    <InputNumber id="contact_no" @bind-Value="Register.contact_no" class="form-control" />
                    <ValidationMessage For="() => Register.contact_no" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="email" class="form-label">Email:</label>
                    <InputText id="email" @bind-Value="Register.email" class="form-control" />
                    <ValidationMessage For="() => Register.email" class="text-danger" />
                </div>

                <div class="d-flex justify-content-center">
                    <button type="submit" class="btn btn-primary px-4">Create</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<div class="text-center mt-3">
    <a href="/home" class="btn btn-outline-secondary">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Register Register { get; set; } = new();

    private async Task AddRegister()
    {
        using var context = DbFactory.CreateDbContext();
        context.Register.Add(Register);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/registers");
    }
}
